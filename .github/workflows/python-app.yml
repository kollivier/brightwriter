# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

# this is where the magic happens, each job happens in parallel btw
jobs:
  build_on_win:
    runs-on: windows-latest
    steps:
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.6
      - name: Install dependencies
        run: |
          pip install flake8 pytest
          if [ -f requirements-win.txt ]; then pip install -r requirements-win.txt; fi
      - name: Build app
        run: |
          pew build
          pew package
      - name: GH Release
        uses: actions/upload-artifact@v2.2.4
        with:
          name: Windows (x64) installer
          path: package/win/brightwriter-*.exe
  build_on_mac:
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: |
        curl -o /tmp/python3.6.pkg https://www.python.org/ftp/python/3.6.8/python-3.6.8-macosx10.9.pkg
        sudo installer -pkg /tmp/python3.6.pkg -target /
        /Library/Frameworks/Python.framework/Versions/3.6/bin/python3 -m pip install --upgrade pip
        /Library/Frameworks/Python.framework/Versions/3.6/bin/pip3 install virtualenv
        /Library/Frameworks/Python.framework/Versions/3.6/bin/virtualenv -p python3.6 .py36env
        . .py36env/bin/activate
        pip install flake8 pytest
        if [ -f requirements-mac.txt ]; then pip install -r requirements-mac.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        # flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        . .py36env/bin/activate
        flake8 . --exclude .py36env --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Install the Apple certificate and provisioning profile
      env:
        BUILD_CERTIFICATE_BASE64: ${{ secrets.MAC_CODESIGN_CERT }}
        P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
        KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
      run: |
        CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
        KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
        echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
        security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
        security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
        security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
        security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
        security list-keychain -d user -s $KEYCHAIN_PATH
    - name: Build app
      env:
        MAC_CODESIGN_IDENTITY: ${{ secrets.MAC_CODESIGN_IDENTITY }}
      run: |
        . .py36env/bin/activate
        pew build --sign
        pew package
    - name: GH Release
      uses: actions/upload-artifact@v2.2.4
      with:
        name: macOS (x64) package
        path: package/osx/brightwriter-*.dmg
